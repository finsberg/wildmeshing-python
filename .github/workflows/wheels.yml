name: Wheels

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Tag name"
        type: string

defaults:
  run:
    shell: bash -el {0}

jobs:
  build-wheels:
    name: ${{ matrix.name }} on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macOS-13, macOS-14, windows-2019]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
       
        include:
          - os: ubuntu-22.04
            name: Linux
          - os: windows-2019
            name: Windows
          - os: macos-13
            name: macOS-13
          - os: macos-14
            name: macOS-14 ARM64
            
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 10
          submodules: "recursive"

      - name: Setup NMake (Windows)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          channels: conda-forge
          python-version: ${{ matrix.python-version }}
          channel-priority: true
          activate-environment: test-env

      - name: Install Dependencies
        run: python3 -m pip install numpy svgwrite cmake

      - name: Install Dependencies  (Windows)
        if: runner.os == 'Windows'
        run: conda install mpir -y

      - name: Envs (Windows)
        if: runner.os == 'Windows'
        run: echo "CMAKE_GENERATOR=NMake Makefiles" >> $GITHUB_ENV

      - name: Configure git
        run: git config --global http.version HTTP/1.1
    
      - name: Configure ssl certificate
        if : runner.os == 'Windows'
        run: git config --global http.sslBackend schannel
    
      - name: Install build
        run: python -m pip install build

      - name: Build wheel
        run: python -m build -w

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          path: dist/*.whl
          name: python-wheels-${{ matrix.os }}-${{ matrix.python-version }}

  release:
    needs: build-wheels
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
            pattern: python-wheels*
            path: dist
            merge-multiple: true


      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.whl
          tag_name: ${{ github.event.inputs.tag_name }}